{"version":3,"sources":["components/AddCategory.js","helpers/getGif.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGif.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cate","type","value","onChange","target","placeholder","required","getGif","categories","a","url","encodeURI","fetch","resp","json","data","gif","map","img","id","titulo","title","images","downsized_large","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGif","key","GifExpertApp","defaultCategories","category","ReactDOM","render","document","getElementById"],"mappings":"oMAGe,SAASA,EAAT,GAAuC,IAAjBC,EAAgB,EAAhBA,cAE7B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBJ,OAEI,sBAAMC,SAde,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAStB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAtBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,QAsBnBG,YAAY,8BACZC,UAAQ,M,kCC7BXC,EAAM,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,4DAEJ,mCACRC,EAHY,6DAGiDC,UAAWH,GAH5D,oBAEJ,oCAFI,SAICI,MAAMF,GAJP,cAIZG,EAJY,gBAKGA,EAAKC,OALR,uBAKXC,EALW,EAKXA,KAGDC,EAAMD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACxB,MAAM,CACFC,GAAID,EAAIC,GACRC,OAAQF,EAAIG,MACZX,IAAG,UAAEQ,EAAII,cAAN,aAAE,EAAYC,gBAAgBb,QAZvB,kBAgBXM,GAhBW,4CAAH,sDCCJ,SAASQ,EAAT,GAAqC,IAAfJ,EAAc,EAAdA,OAAQV,EAAM,EAANA,IAEzC,OACI,sBAAKe,UAAU,0DAAf,UACI,4BAAIL,IACJ,qBAAKM,IAAKhB,EAAKiB,IAAKP,OCJjB,SAASQ,EAAT,GAAgC,IAAdpB,EAAa,EAAbA,WAE7B,ECFW,SAAqBA,GAEhC,MAA0BhB,mBAAS,CAC/BuB,KAAM,GACNc,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAXAC,qBAAU,WACNzB,EAAOC,GAAYyB,MAAK,SAAAC,GAEpBH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,SAIlB,CAACrB,IAEGsB,EDhBiBK,CAAY3B,GAA7BO,EAAP,EAAOA,KAAMc,EAAb,EAAaA,QAEb,OACI,qCACA,oBAAIJ,UAAU,oCAAd,SAAmDjB,IAElDqB,GAAW,mBAAGJ,UAAU,WAE1B,oBAAIA,UAAU,YAAd,SAGIV,EAAKE,KAAK,SAAAC,GAAG,OACT,wBAACM,EAAD,2BAAiBN,GAAjB,IAAsBkB,IAAKlB,EAAIC,cEd/B,SAASkB,EAAT,GAAyD,IAAD,IAAhCC,yBAAgC,MAAZ,CAAC,QAAW,EAInE,EAAkC9C,mBAAS8C,GAA3C,mBAAOC,EAAP,KAAiBhD,EAAjB,KAGA,OACI,qCACA,6BACR,mDAEQ,cAACD,EAAD,CAAaC,cAAgBA,IAC5B,uBAGA,6BAEIgD,EAAStB,KAAI,SAAAT,GAAU,OACvB,cAACoB,EAAD,CAASpB,WAAYA,GAAiBA,W,MCjBnDgC,IAASC,OAEL,cAACJ,EAAD,IACFK,SAASC,eAAe,W","file":"static/js/main.fedafb38.chunk.js","sourcesContent":["import React, {useState}from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function AddCategory({setCategories}) {\r\n    \r\n        const [inputValue, setinputValue] = useState('')    \r\n\r\n        const handleInputChange = (e) => {\r\n            setinputValue(e.target.value )\r\n\r\n             }\r\n        const handleSubmit = (e) => {\r\n            e.preventDefault();\r\n\r\n            if(inputValue.trim().length > 0) {\r\n                setCategories(cate => [inputValue, ...cate])\r\n                setinputValue('');\r\n            }\r\n            \r\n            \r\n        }\r\n\r\n        \r\n    return (\r\n        \r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue} \r\n                onChange={handleInputChange}\r\n                placeholder=\"Busca tu categoria favorita\"\r\n                required \r\n                           />\r\n        </form>\r\n        \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\n\r\n\r\n","\r\n\r\nexport const getGif = async(categories) => {\r\n\r\n    const apiKey ='C0UHCJVMqnzF9UbwTSNZ9ZC19a26XTIS'\r\n    const url = `https://api.giphy.com/v1/gifs/search?limit=15&g=&q=${ encodeURI( categories)}&api_key=${apiKey}`    \r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json()\r\n\r\n\r\n    const gif = data.map(img => {\r\n        return{\r\n            id: img.id,\r\n            titulo: img.title,\r\n            url: img.images?.downsized_large.url\r\n        }\r\n    })\r\n\r\n    return gif;\r\n    \r\n}","import React from 'react'\r\n;\r\n\r\nexport default function GifGridItem({titulo, url}) {\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn animate__slow\t \">\r\n            <p>{titulo}</p>\r\n            <img src={url} alt={titulo} /> \r\n            \r\n        </div>\r\n    )\r\n}\r\n","import useFetchGif from '../hooks/useFetchGif';\r\nimport GifGridItem from './GifGridItem';\r\n\r\n\r\nexport default function GifGrid({categories}) {\r\n\r\n    const {data, loading} = useFetchGif(categories);  \r\n\r\n    return (\r\n        <>\r\n        <h1 className=\"animate__animated animate__zoomIn\">{categories}</h1>\r\n\r\n        {loading && <p className='loader' ></p>} \r\n\r\n       <ol className=\"card-grid\">\r\n           {\r\n       \r\n           data.map( img =>(\r\n               <GifGridItem {...img} key={img.id}  /> \r\n           ))\r\n       \r\n        }\r\n           </ol>\r\n\r\n\r\n            \r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGif } from \"../helpers/getGif\";\r\n\r\n\r\nexport default function useFetchGif(categories) {\r\n   \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true, \r\n    })\r\n\r\n    useEffect(() =>{\r\n        getGif(categories).then(imgs => {\r\n\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            })\r\n\r\n        })\r\n    }, [categories])\r\n\r\n    return state;\r\n\r\n}\r\n","import React, {useState}from 'react'\r\nimport AddCategory from './components/AddCategory'\r\nimport GifGrid from './components/GifGrid'\r\n\r\nexport default function GifExpertApp({ defaultCategories = ['Cats'] }) {\r\n\r\n    \r\n\r\n    const [category, setCategories] = useState(defaultCategories)\r\n\r\n \r\n    return (\r\n        <>\r\n        <ul>\r\n<h2> Gif Expert App</h2>\r\n</ul>   \r\n        <AddCategory setCategories ={setCategories}/>\r\n         <hr />\r\n\r\n            \r\n         <ol>\r\n             {\r\n             category.map(categories => (\r\n             <GifGrid categories={categories} key={categories}/>\r\n            ))\r\n             \r\n             }\r\n         </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}